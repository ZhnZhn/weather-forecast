{"version":3,"sources":["../../src/utils/dt.js"],"names":["BLANK","_daysOfWeek","_days","_sidesOfCompass","dt","toMonthDay","timestamp","d","Date","mm","getMonth","slice","dd","getDate","toTime","hh","getHours","h","min","getMinutes","ampm","toMonthDayTime","monthDay","time","toShortDayOfWeek","wd","getDay","toDayOfWeek","toDayHour","toDirection","degNum","val","Math","floor"],"mappings":"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","sourcesContent":["\r\nconst BLANK = \" \";\r\nconst _daysOfWeek = [\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"];\r\nconst _days = [\"SUNDAY\", \"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\"];\r\nconst _sidesOfCompass = [\r\n                          \"N\", \"NNE\", \"NE\", \"ENE\",\r\n                          \"E\", \"ESE\", \"SE\", \"SSE\",\r\n                          \"S\", \"SSW\", \"SW\", \"WSW\",\r\n                          \"W\", \"WNW\", \"NW\", \"NNW\"\r\n                        ];\r\n\r\n\r\nconst dt = {\r\n\r\n  toMonthDay(timestamp) {\r\n     const d = new Date(timestamp * 1000)\t// Convert the passed timestamp to milliseconds\r\n         , mm = ('0' + (d.getMonth() + 1)).slice(-2)\t// Months are zero based. Add leading 0.\r\n         , dd = ('0' + d.getDate()).slice(-2);\t\t\t// Add leading 0.\r\n     return mm + \"-\" + dd;\r\n  },\r\n\r\n  toTime(timestamp) {\r\n    var d = new Date(timestamp * 1000)\t// Convert the passed timestamp to milliseconds\r\n    , hh = d.getHours()\r\n    , h = hh\r\n    , min = ('0' + d.getMinutes()).slice(-2)\t\t// Add leading 0.\r\n    , ampm = 'AM';\r\n\r\n    if (hh > 12) {\r\n      h = hh - 12;\r\n      ampm = 'PM';\r\n    } else if (hh === 12) {\r\n      h = 12;\r\n      ampm = 'PM';\r\n    } else if (hh === 0) {\r\n      h = 12;\r\n    }\r\n\r\n    return h + ':' + min + ' ' + ampm;\r\n},\r\n\r\ntoMonthDayTime(timestamp){\r\n   const monthDay = dt.toMonthDay(timestamp);\r\n   const time = dt.toTime(timestamp);\r\n   return monthDay + ' ' + time;\r\n },\r\n\r\n toShortDayOfWeek(timestamp) {\r\n   const d = new Date(timestamp * 1000)\r\n      , dd = ('0' + d.getDate()).slice(-2)\r\n      , wd = _daysOfWeek[d.getDay()];\r\n   return dd + ' ' + wd;\r\n },\r\n\r\n toDayOfWeek(timestamp) {\r\n   const d = new Date(timestamp * 1000)\r\n      , dd = ('0' + d.getDate()).slice(-2)\r\n      , wd = _days[d.getDay()];\r\n    return dd + BLANK + wd;\r\n },\r\n\r\n toDayHour(timestamp) {\r\n   const d = new Date(timestamp * 1000)\r\n       , dd = ('0' + d.getDate()).slice(-2)\r\n       , hh = ('0' + d.getHours()).slice(-2);\r\n   return dd + BLANK + hh;\r\n },\r\n\r\n toDirection(degNum=0) {\r\n    const val = Math.floor((degNum / 22.5) + 0.5);\r\n    return _sidesOfCompass[(val % 16)];\r\n  }\r\n}\r\n\r\nexport default dt\r\n"],"file":"dt.js"}