{"version":3,"sources":["../../../src/components/dialogs/SettingsDialog.jsx"],"names":["Component","React","S","MODAL","position","width","height","margin","TABS","textAlign","marginLeft","TAB_SELECTED","color","CARD_ROOT","CARD_BUTTONS","right","bottom","cursor","SettingsDialog","_isNextPropIsShowSame","nextProps","props","isShow","_handleSet","data","onClose","onSet","inputApiKey","getValue","_handleSetTheme","item","theme","onSetTheme","prevTheme","themeName","value","forceUpdate","_refInput","c","shouldComponentUpdate","nextState","render","TS","createStyle","styleConfig","R_DIALOG"],"mappings":"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","sourcesContent":["import React from '../_react'\r\n//import PropTypes from 'prop-types';\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from './Dialog.Style'\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\n\r\nimport TabPane from '../zhn-atoms/TabPane'\r\nimport Tab from '../zhn-atoms/Tab'\r\nimport CardApiKey from './CardApiKey'\r\nimport CardUi from './CardUi'\r\n\r\nconst { Component } = React;\r\n\r\nconst S = {\r\n  MODAL: {\r\n    position: 'static',\r\n    width: '342px',\r\n    height: '285px',\r\n    margin: '70px auto 0px'\r\n  },\r\n  TABS: {\r\n    textAlign: 'left',\r\n    marginLeft: '24px'\r\n  },\r\n  TAB_SELECTED: {\r\n    //color: '#2f7ed8'\r\n    color: 'black'\r\n  },\r\n  CARD_ROOT: {\r\n    position: 'relative',\r\n    height: '200px'\r\n  },\r\n  CARD_BUTTONS: {\r\n    position: 'absolute',\r\n    right: '4px',\r\n    bottom: 0,\r\n    cursor: 'default'\r\n  }\r\n};\r\n\r\n\r\nclass SettingsDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      onSet: PropTypes.func\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  _isNextPropIsShowSame = (nextProps) => {\r\n    return nextProps !== this.props\r\n      && nextProps.isShow === this.props.isShow;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if ( this._isNextPropIsShowSame(nextProps) ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSet = () => {\r\n    const { data, onClose } = this.props\r\n        , { onSet } = data;\r\n    onSet(this.inputApiKey.getValue())\r\n    onClose()\r\n  }\r\n  _handleSetTheme = (item) => {\r\n    const { theme, data } = this.props\r\n        , { onSetTheme } = data\r\n        , prevTheme = theme.themeName;\r\n    onSetTheme(theme, item.value)\r\n    if (prevTheme !== item.value) {\r\n      this.forceUpdate()\r\n    }\r\n  }\r\n\r\n  _refInput = c => this.inputApiKey = c\r\n\r\n  render(){\r\n    const {\r\n            theme,\r\n            isShow,\r\n            onClose\r\n          } = this.props\r\n        , TS = theme.createStyle(styleConfig);\r\n    return (\r\n         <ModalDialog\r\n            style={{ ...S.MODAL, ...TS.R_DIALOG }}\r\n            caption=\"User Settings\"\r\n            isShow={isShow}\r\n            isWithButton={false}\r\n            onClose={onClose}\r\n         >\r\n           <TabPane width=\"100%\" tabsStyle={S.TABS}>\r\n             <Tab\r\n               title=\"API Key\"\r\n               selectedStyle={S.TAB_SELECTED}\r\n              >\r\n                <CardApiKey\r\n                  ref={this._refInput}\r\n                  style={S.CARD_ROOT}\r\n                  buttonsStyle={S.CARD_BUTTONS}\r\n                  onSet={this._handleSet}\r\n                  onClose={onClose}\r\n                />\r\n             </Tab>\r\n             <Tab\r\n               title=\"UI Theme\"\r\n               selectedStyle={S.TAB_SELECTED}\r\n             >\r\n                <CardUi\r\n                  style={S.CARD_ROOT}\r\n                  buttonsStyle={S.CARD_BUTTONS}\r\n                  onSetTheme={this._handleSetTheme}\r\n                  onClose={onClose}\r\n                />\r\n             </Tab>\r\n           </TabPane>\r\n         </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(SettingsDialog)\r\n"],"file":"SettingsDialog.js"}