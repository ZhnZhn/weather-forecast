{"version":3,"sources":["../../../src/components/zhn-m-input/SecretField.jsx"],"names":["Component","React","CL","SELECT","LABEL","DIV","INPUT","INPUT_LINE","INPUT_MSG_ERR","S","LABEL_TO_INPUT","transform","LABEL_ON_ERROR","color","LINE_ERROR","borderBottom","_isFn","fn","_crValue","_v","v","value","_vL","length","vL","substr","trim","_maskValue","len","i","str","TextField","props","_handleFocusInput","isFocus","forceUpdate","_handleBlurInput","_handleInputChange","event","target","_value","isOnTest","setState","isPassTest","onTest","_handleKeyDown","keyCode","isOnEnter","onEnter","_isValue","isAllowRemember","_input","state","_refInput","c","render","rootStyle","caption","name","maxLength","errorMsg","_labelStyle","undefined","_labelErrStyle","_lineStyle","_name","_inputProps","autoComplete","defaultValue","onChange","onKeyDown","componentDidUpdate","prevProps","getValue","String","defaultProps"],"mappings":"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","sourcesContent":["import React from '../_react'\r\nconst { Component } = React;\r\n\r\nconst CL = {\r\n  SELECT: 'm-select',\r\n  LABEL: 'm-select__label',\r\n  DIV: 'm-textfield-input__div',\r\n  INPUT: 'm-textfield-input',\r\n  INPUT_LINE: 'm-input__line',\r\n  INPUT_MSG_ERR: 'm-input__msg-err'\r\n};\r\n\r\nconst S = {\r\n  LABEL_TO_INPUT: {\r\n     transform: 'scale(1) translate(0px, -6px)'\r\n  },\r\n  LABEL_ON_ERROR: {\r\n    color: '#F44336'\r\n  },\r\n  LINE_ERROR: {\r\n    borderBottom: '2px solid #F44336'\r\n  }\r\n};\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nconst _crValue = (_v, v) => {\r\n  let value;\r\n  if (!_v) { value = v }\r\n  else {\r\n    const _vL = _v.length\r\n         , vL = v.length;\r\n    if (vL > _vL) {\r\n      value = _v + v.substr(_vL)\r\n    } else {\r\n      value = _v.substr(0, vL)\r\n    }\r\n  }\r\n  return value.trim();\r\n}\r\n\r\nconst _maskValue = (len=0) => {\r\n  let i=0, str = '';\r\n  for (i; i<len; i++){\r\n    str = str + 'X'\r\n  }\r\n  return str;\r\n};\r\n\r\nclass TextField extends Component {\r\n  static defaultProps = {\r\n    maxLength: \"32\"\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this.isFocus = false;\r\n    const { onTest, onEnter } = props;\r\n    this.isOnTest = _isFn(onTest)\r\n    this.isOnEnter = _isFn(onEnter)\r\n    this.state = {\r\n      value: '',\r\n      isPassTest: true\r\n    }\r\n  }\r\n\r\n  _handleFocusInput = () => {\r\n    this.isFocus = true\r\n    this.forceUpdate()\r\n  }\r\n  _handleBlurInput = () => {\r\n    this.isFocus = false\r\n    this.forceUpdate()\r\n  }\r\n\r\n  _handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    this._value = _crValue(this._value, value)\r\n    const _v = _maskValue(this._value.length);\r\n    if (this.isOnTest) {\r\n      this.setState({\r\n        value: _v,\r\n        isPassTest: this.props.onTest(this._value)\r\n      })\r\n    } else {\r\n      this.setState({ value : _v })\r\n    }\r\n  }\r\n _handleKeyDown = (event) => {\r\n   if (event.keyCode === 27){\r\n     this._value = ''\r\n     this.setState({ value: '' })\r\n   } else if (event.keyCode === 13 && this.isOnEnter) {\r\n     this.props.onEnter(event.target.value)\r\n   }\r\n }\r\n _isValue = (isAllowRemember) => {\r\n    return isAllowRemember\r\n      ? this._input\r\n          ? !!this._input.value\r\n          : false\r\n      : !!this.state.value;\r\n }\r\n\r\n _refInput = c => this._input = c\r\n\r\n  render(){\r\n    const {\r\n            rootStyle, caption,\r\n            isAllowRemember, name,\r\n            maxLength, errorMsg=''\r\n          } = this.props\r\n        , { value, isPassTest } = this.state\r\n        //, _labelStyle = (value || this.isFocus)\r\n          , _labelStyle = (this._isValue(isAllowRemember) || this.isFocus)\r\n            ? undefined\r\n            : S.LABEL_TO_INPUT\r\n        , _labelErrStyle = (isPassTest)\r\n            ? undefined\r\n            : S.LABEL_ON_ERROR\r\n        , _lineStyle = (isPassTest)\r\n            ? undefined\r\n            : S.LINE_ERROR\r\n        , _name = `${name}[password]`\r\n        , _inputProps = isAllowRemember\r\n             ? {\r\n                 autoComplete: \"current-password\",\r\n                 name: _name\r\n               }\r\n             : {\r\n                 autoComplete: \"off\",\r\n                 name: _name,\r\n                 value: value,\r\n                 defaultValue: value,\r\n                 onChange: this._handleInputChange,\r\n                 onKeyDown: this._handleKeyDown\r\n               };\r\n\r\n    return (\r\n      <form\r\n        className={CL.SELECT}\r\n        style={rootStyle}\r\n      >\r\n        <label\r\n          className={CL.LABEL}\r\n          style={{..._labelStyle, ..._labelErrStyle}}\r\n         >\r\n          {caption}\r\n        </label>\r\n        <div className={CL.DIV}>\r\n          <input\r\n            hidden={true}\r\n            name={_name}\r\n            value={name}\r\n          />\r\n          <input\r\n            ref = {this._refInput}\r\n            type=\"password\"\r\n            className={CL.INPUT}\r\n            autoCorrect=\"off\"\r\n            autoCapitalize=\"off\"\r\n            spellCheck={false}\r\n            translate={false}\r\n            maxLength={maxLength}\r\n            onFocus={this._handleFocusInput}\r\n            onBlur={this._handleBlurInput}\r\n            {..._inputProps}\r\n          />\r\n          <div className={CL.INPUT_LINE} style={_lineStyle} />\r\n          {\r\n             _lineStyle && <div className={CL.INPUT_MSG_ERR}>\r\n                 {errorMsg}\r\n               </div>\r\n          }\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (this.props !== prevProps){\r\n      if (this.props.isAllowRemember !== prevProps.isAllowRemember){\r\n        this._input.value = ''\r\n        if (this.props.isAllowRemember){\r\n          this._value = ''\r\n          this.setState({ value: '' })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getValue(){\r\n    const { isAllowRemember } = this.props;\r\n    return isAllowRemember && this._input\r\n      ? this._input.value\r\n      : String(this._value).trim();\r\n  }\r\n}\r\n\r\nexport default TextField\r\n"],"file":"SecretField.js"}