{"version":3,"sources":["../../../src/components/wrapper/PeriodForecast.jsx"],"names":["Component","INIT_STATE","forecast","cod","list","Wrapper","state","_onStore","props","store","onUpdate","getState","recent","setState","byId","unsubscribe","subscribe","onClickItem","cursor"],"mappings":";;;;;;;;AACA;;;;AAEA;;;;AAEA;;;;;;;;+eALA;;;IAOQA,S,mBAAAA,S;;;AAER,IAAMC,aAAa;AACjBC,YAAW;AACTC,SAAM,GADG;AAETC,UAAO;AAFE;AADM,CAAnB;;IAOMC,O;;;;;;;;;;;;;;wLACJC,K,GAAQL,U,QAORM,Q,GAAW,YAAM;AAAA,wBACa,MAAKC,KADlB;AAAA,UACPC,KADO,eACPA,KADO;AAAA,UACAC,QADA,eACAA,QADA;AAAA,UAEbJ,KAFa,GAELG,MAAME,QAAN,EAFK;AAAA,UAGbC,MAHa,GAGJ,qBAAUA,MAAV,CAAiBN,KAAjB,CAHI;AAIf;AACA;;;AACA,UAAIM,UAAU,MAAKA,MAAL,KAAgBA,MAA9B,EAAsC;AACpC,cAAKA,MAAL,GAAcA,MAAd;AACA,cAAKC,QAAL,CAAc;AACZ;AACAX,oBAAW,qBAAUY,IAAV,CAAeR,KAAf,EAAsBM,MAAtB;AAFC,SAAd,EAGGF,QAHH;AAID;AACF,K;;;;;wCAlBkB;AAAA,UACTD,KADS,GACC,KAAKD,KADN,CACTC,KADS;;AAEjB,WAAKM,WAAL,GAAmBN,MAAMO,SAAN,CAAgB,KAAKT,QAArB,CAAnB;AACD;;;2CAiBqB;AACpB,WAAKQ,WAAL;AACD;;;6BAEO;AAAA,UACEE,WADF,GACkB,KAAKT,KADvB,CACES,WADF;AAAA,UAEEf,QAFF,GAEe,KAAKI,KAFpB,CAEEJ,QAFF;;AAGN,aACE;AACI,kBAAU,EAAEgB,QAAQ,SAAV,EADd;AAEI,kBAAUhB,QAFd;AAGI,qBAAae;AAHjB,QADF;AAOD;;;;EArCmBjB,S;;kBAwCPK,O","file":"PeriodForecast.js","sourcesContent":["//import React, { Component } from 'react';\r\nimport React from '../_react'\r\n\r\nimport PeriodForecast from '../views/PeriodForecast';\r\n\r\nimport { sForecast } from '../../flux/selectors';\r\n\r\nconst { Component } = React\r\n\r\nconst INIT_STATE = {\r\n  forecast : {\r\n    cod : 200,\r\n    list : []\r\n  }\r\n}\r\n\r\nclass Wrapper extends Component {\r\n  state = INIT_STATE\r\n\r\n  componentDidMount(){\r\n    const { store } = this.props\r\n    this.unsubscribe = store.subscribe(this._onStore)\r\n  }\r\n\r\n  _onStore = () => {\r\n    const { store, onUpdate } = this.props\r\n    , state = store.getState()\r\n    , recent = sForecast.recent(state)\r\n    //, { forecast={} } = store.getState()\r\n    //, { recent } = forecast;\r\n    if (recent && this.recent !== recent ){\r\n      this.recent = recent;\r\n      this.setState({\r\n        // forecast : forecast[recent]\r\n        forecast : sForecast.byId(state, recent)\r\n      }, onUpdate)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n\r\n  render(){\r\n    const { onClickItem } = this.props\r\n    const { forecast } = this.state\r\n    return (\r\n      <PeriodForecast\r\n          dayStyle={{ cursor: 'pointer' }}\r\n          forecast={forecast}\r\n          onClickItem={onClickItem}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wrapper\r\n"]}