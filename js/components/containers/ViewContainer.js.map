{"version":3,"sources":["../../../src/components/containers/ViewContainer.jsx"],"names":["Component","React","STYLE","ROOT_DIV","zIndex","position","top","left","width","getObjToFirst","arr","keyValue","index","i","max","length","key","slice","ViewContainer","_activeDialogs","state","dialog","compDialogs","_checkActiveDialogs","dialogType","push","props","maxDialog","filterActiveDialogs","filter","value","_onStore","actionType","data","initAction","showAction","setState","dialogComp","_handlerToggleDialog","document","getElementsByTagName","style","cursor","_renderDialogs","map","compDialog","cloneElement","isShow","onClose","bind","componentDidMount","store","unsubscribe","subscribe","componentWillUnmount","render"],"mappings":";;;;;;;;;;;AACA;;AADA;AAEA;IAEQA,S,GAAcC,iB,CAAdD,S;AAER,IAAME,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAG;AACTC,IAAAA,MAAM,EAAG,GADA;AAETC,IAAAA,QAAQ,EAAE,UAFD;AAGTC,IAAAA,GAAG,EAAE,MAHI;AAITC,IAAAA,IAAI,EAAE,MAJG;AAKTC,IAAAA,KAAK,EAAE;AALE;AADC,CAAd;;AAUA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAASC,GAAT,EAAcC,QAAd,EAAuB;AAC3C,MAAIC,KAAJ;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAN,EAASC,GAAG,GAACJ,GAAG,CAACK,MAAtB,EAA8BF,CAAC,GAACC,GAAhC,EAAqCD,CAAC,EAAtC,EAAyC;AACvC,QAAIH,GAAG,CAACG,CAAD,CAAH,CAAOG,GAAP,KAAeL,QAAnB,EAA4B;AAC1BC,MAAAA,KAAK,GAAGC,CAAR;AACA;AACD;AACF;;AACD,mBAAWH,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAaL,KAAb,CAAX,EAAmCF,GAAG,CAACO,KAAJ,CAAUL,KAAK,GAAC,CAAhB,CAAnC,GAAuDF,GAAG,CAACE,KAAD,CAA1D;AACD,CATD;;IAYMM,a;;;;;;;;;;;;;UAOJC,c,GAAiB,E;UACjBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,WAAW,EAAG;AAFR,K;;UAaPC,mB,GAAsB,UAACC,UAAD,EAAgB;AACpC,YAAKL,cAAL,CAAoBM,IAApB,CAAyBD,UAAzB;;AACA,UAAI,MAAKL,cAAL,CAAoBJ,MAApB,GAA6B,MAAKW,KAAL,CAAWC,SAA5C,EAAsD;AACpD,cAAKP,KAAL,CAAWC,MAAX,CAAkB,MAAKF,cAAL,CAAoB,CAApB,CAAlB,IAA4C,KAA5C;AACA,cAAKA,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,KAApB,CAA0B,CAA1B,CAAtB;AACD;AACF,K;;UACDW,mB,GAAsB,UAACJ,UAAD,EAAgB;AACpC,YAAKL,cAAL,GAAsB,MAAKA,cAAL,CAAoBU,MAApB,CAA2B,UAACC,KAAD,EAAW;AACxD,eAAOA,KAAK,KAAKN,UAAjB;AACH,OAFqB,CAAtB;AAGD,K;;UAEDO,Q,GAAW,UAACC,UAAD,EAAaC,IAAb,EAAsB;AAAA,wBACG,MAAKP,KADR;AAAA,UACvBQ,UADuB,eACvBA,UADuB;AAAA,UACXC,UADW,eACXA,UADW;;AAE9B,UAAIH,UAAU,KAAKG,UAAnB,EAA8B;AAE3B,YAAI,CAAC,MAAKf,KAAL,CAAWC,MAAX,CAAkBY,IAAlB,CAAL,EAA6B;AAC1B,gBAAKb,KAAL,CAAWC,MAAX,CAAkBY,IAAlB,IAA0B,IAA1B;;AACA,gBAAKV,mBAAL,CAAyBU,IAAzB;AACF;;AACD,cAAKb,KAAL,CAAWE,WAAX,GAAyBb,aAAa,CAAC,MAAKW,KAAL,CAAWE,WAAZ,EAAyBW,IAAzB,CAAtC;;AACA,cAAKG,QAAL,CAAc,MAAKhB,KAAnB;AAEF,OATD,MASO,IAAIY,UAAU,KAAKE,UAAnB,EAA+B;AAEnC,cAAKd,KAAL,CAAWC,MAAX,CAAkBY,IAAI,CAACT,UAAvB,IAAqC,IAArC;;AACA,cAAKJ,KAAL,CAAWE,WAAX,CAAuBG,IAAvB,CAA4BQ,IAAI,CAACI,UAAjC;;AACA,cAAKd,mBAAL,CAAyBU,IAAI,CAACT,UAA9B;;AACA,cAAKY,QAAL,CAAc,MAAKhB,KAAnB;AAEF;AACH,K;;UAEFkB,oB,GAAuB,UAACd,UAAD,EAAgB;AAAA,UAC9BH,MAD8B,GACpB,MAAKD,KADe,CAC9BC,MAD8B;AAErCA,MAAAA,MAAM,CAACG,UAAD,CAAN,GAAqB,CAACH,MAAM,CAACG,UAAD,CAA5B;;AACA,YAAKY,QAAL,CAAc,MAAKhB,KAAnB;;AAEA,UAAI,CAACC,MAAM,CAACG,UAAD,CAAX,EAAyB;AACvB,cAAKI,mBAAL,CAAyBJ,UAAzB;;AACAe,QAAAA,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,KAAzC,CAA+CC,MAA/C,GAAwD,EAAxD;AACD;AACF,K;;UAEDC,c,GAAiB,YAAM;AAAA,wBACS,MAAKvB,KADd;AAAA,UACdC,MADc,eACdA,MADc;AAAA,UACNC,WADM,eACNA,WADM;AAErB,aAAOA,WAAW,CAACsB,GAAZ,CAAgB,UAACC,UAAD,EAAajC,KAAb,EAAuB;AAC3C,eAAOX,kBAAM6C,YAAN,CAAmBD,UAAnB,EACJ;AACG7B,UAAAA,GAAG,EAAG6B,UAAU,CAAC7B,GADpB;AAEG+B,UAAAA,MAAM,EAAI1B,MAAM,CAACwB,UAAU,CAAC7B,GAAZ,CAFnB;AAGGgC,UAAAA,OAAO,EAAG,MAAKV,oBAAL,CAA0BW,IAA1B,iDAAqCJ,UAAU,CAAC7B,GAAhD;AAHb,SADI,CAAP;AAMF,OAPM,CAAP;AAQD,K;;;;;;;SA/DAkC,iB,GAAA,6BAAmB;AAAA,QACTC,KADS,GACC,KAAKzB,KADN,CACTyB,KADS;AAEjB,SAAKC,WAAL,GAAmBD,KAAK,CAACE,SAAN,CAAgB,KAAKtB,QAArB,CAAnB;AACD,G;;SACDuB,oB,GAAA,gCAAsB;AACpB,SAAKF,WAAL;AACD,G;;SA2DFG,M,GAAA,kBAAQ;AACN,WACE;AAAK,MAAA,KAAK,EAAErD,KAAK,CAACC;AAAlB,OACG,KAAKwC,cAAL,EADH,CADF;AAKD,G;;;EApFyB3C,S;;eAwFbkB,a","sourcesContent":["//import React, { Component } from 'react';\r\nimport React from '../_react'\r\n//import PropTypes from 'prop-types';\r\n\r\nconst { Component } = React;\r\n\r\nconst STYLE = {\r\n  ROOT_DIV : {\r\n    zIndex : 500,\r\n    position: 'absolute',\r\n    top: '70px',\r\n    left: '10px',\r\n    width: '99%'\r\n  }\r\n};\r\n\r\nconst getObjToFirst = function(arr, keyValue){\r\n  let index;\r\n  for (var i=0, max=arr.length; i<max; i++){\r\n    if (arr[i].key === keyValue){\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  return [...arr.slice(0, index), ...arr.slice(index+1), arr[index]]\r\n}\r\n\r\n\r\nclass ViewContainer extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.object\r\n  }\r\n  */\r\n\r\n  _activeDialogs = [];\r\n  state = {\r\n    dialog: {},\r\n    compDialogs : []\r\n  }\r\n\r\n   componentDidMount(){\r\n     const { store } = this.props\r\n     this.unsubscribe = store.subscribe(this._onStore);\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe();\r\n   }\r\n\r\n   _checkActiveDialogs = (dialogType) => {\r\n     this._activeDialogs.push(dialogType);\r\n     if (this._activeDialogs.length > this.props.maxDialog){\r\n       this.state.dialog[this._activeDialogs[0]] = false;\r\n       this._activeDialogs = this._activeDialogs.slice(1);\r\n     }\r\n   }\r\n   filterActiveDialogs = (dialogType) => {\r\n     this._activeDialogs = this._activeDialogs.filter((value) => {\r\n         return value !== dialogType;\r\n     })\r\n   }\r\n\r\n   _onStore = (actionType, data) => {\r\n      const {initAction, showAction} = this.props;\r\n      if (actionType === showAction){\r\n\r\n         if (!this.state.dialog[data]){\r\n            this.state.dialog[data] = true;\r\n            this._checkActiveDialogs(data);\r\n         }\r\n         this.state.compDialogs = getObjToFirst(this.state.compDialogs, data);\r\n         this.setState(this.state);\r\n\r\n      } else if (actionType === initAction) {\r\n\r\n         this.state.dialog[data.dialogType] = true;\r\n         this.state.compDialogs.push(data.dialogComp);\r\n         this._checkActiveDialogs(data.dialogType);\r\n         this.setState(this.state);\r\n\r\n      }\r\n   }\r\n\r\n  _handlerToggleDialog = (dialogType) => {\r\n    const {dialog} = this.state;\r\n    dialog[dialogType] = !dialog[dialogType];\r\n    this.setState(this.state);\r\n\r\n    if (!dialog[dialogType]) {\r\n      this.filterActiveDialogs(dialogType);\r\n      document.getElementsByTagName('html')[0].style.cursor = '';\r\n    }\r\n  }\r\n\r\n  _renderDialogs = () => {\r\n    const {dialog, compDialogs} = this.state;\r\n    return compDialogs.map((compDialog, index) => {\r\n       return React.cloneElement(compDialog,\r\n          {\r\n             key : compDialog.key,\r\n             isShow  : dialog[compDialog.key],\r\n             onClose : this._handlerToggleDialog.bind(this, compDialog.key)\r\n          });\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={STYLE.ROOT_DIV}>\r\n        {this._renderDialogs()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ViewContainer;\r\n"],"file":"ViewContainer.js"}