{"version":3,"sources":["../../../src/components/containers/ModalDialogContainer.jsx"],"names":["Component","React","ModalDialogContainer","state","isShow","inits","shows","data","dialogs","currentDialog","_onStore","store","props","getState","modal","type","id","push","comp","Router","RouterData","getData","setState","_handleClose","onBeforeClose","prevState","_renderDialogs","map","dialog","createElement","key","onClose","bind","componentDidMount","unsubscribe","subscribe","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from '../_react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport Router from '../dialogs/Router'\r\nimport RouterData from '../dialogs/RouterData'\r\nimport WrapperModalDialog from '../zhn-atoms/WrapperModalDialog'\r\n\r\nconst { Component } = React;\r\n\r\nclass ModalDialogContainer extends Component {\r\n\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      subscribe: PropTypes.func\r\n    })\r\n  }\r\n  */\r\n\r\n  state = {\r\n    isShow: false,\r\n    inits: {},\r\n    shows: {},\r\n    data: {},\r\n    dialogs: [],\r\n    currentDialog: null\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store\r\n      .subscribe(this._onStore);\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n  _onStore = () => {\r\n    const { store } = this.props\r\n        , { modal } = store.getState()\r\n        , { id:type } = modal;\r\n    if (type && this.modal !== modal) {\r\n      this.modal = modal\r\n      const { inits, shows, data, dialogs } = this.state;\r\n      if (!inits[type]){\r\n        dialogs.push({ type : type, comp : Router[type] })\r\n        data[type] = RouterData.getData(store, type)\r\n        inits[type] = true\r\n        shows[type] = true\r\n        this.setState({\r\n          isShow: true, currentDialog: type,\r\n           shows, data, dialogs\r\n         });\r\n      } else {\r\n        shows[type] = true\r\n        this.setState({\r\n          isShow: true, currentDialog: type,\r\n          shows, data\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  _handleClose = (type) => {\r\n    const data = this.state.data[type] || {}\r\n       , { onBeforeClose } = data;\r\n    if (typeof onBeforeClose === 'function') {\r\n      onBeforeClose()\r\n    }\r\n    this.setState((prevState) => {\r\n      prevState.shows[type] = false\r\n      return {\r\n        isShow: false,\r\n        currentDialog: null,\r\n        shows: prevState.shows\r\n      };\r\n    })\r\n  }\r\n\r\n  _renderDialogs = () => {\r\n    const { store } = this.props\r\n        , { shows, data, dialogs } = this.state;\r\n\r\n    return dialogs.map(dialog => {\r\n      const { type, comp } = dialog;\r\n      return React.createElement(comp, {\r\n           key: type,\r\n           isShow: shows[type],\r\n           data: data[type],\r\n           store: store,\r\n           onClose: this._handleClose.bind(null, type)})\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { isShow, currentDialog } = this.state;\r\n    return (\r\n      <WrapperModalDialog\r\n          isShow={isShow}\r\n          onClose={this._handleClose.bind(null, currentDialog)}\r\n      >\r\n         {this._renderDialogs()}\r\n     </WrapperModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModalDialogContainer\r\n"],"file":"ModalDialogContainer.js"}