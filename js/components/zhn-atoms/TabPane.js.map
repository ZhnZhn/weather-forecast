{"version":3,"sources":["../../../src/components/zhn-atoms/TabPane.jsx"],"names":["Component","styles","ulStyle","listStyle","marginTop","marginLeft","marginRight","marginBottom","textAlign","TabPane","props","components","children","map","tab","index","cloneElement","key","state","selectedTabIndex","width","height","_renderTabs","_renderComponents2","_handlerClickTab","tabEl","setState","onClick","isSelected","bind","comp","divStyle","display","getSelectedTabIndex"],"mappings":";;;;;;;;qCAAA;;;AACA;;;;;;;;;;;;IAEQA,S,mBAAAA,S;;;AAER,IAAMC,SAAS;AACbC,WAAU;AACRC,eAAW,mBADH;AAERC,eAAW,KAFH;AAGRC,gBAAY,MAHJ;AAIRC,iBAAa,KAJL;AAKRC,kBAAc,KALN;AAMRC,eAAW;AACX;AAPQ;AADG,CAAf;;IAaMC,O;;;AAEJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA;;AAEhB,QAAMC,aAAaD,MAAME,QAAN,CAAeC,GAAf,CAAmB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACnD,aAAQ,gBAAMC,YAAN,CAAmBF,IAAIJ,KAAJ,CAAUE,QAA7B,EAAuC,EAAEK,KAAM,SAASF,KAAjB,EAAvC,CAAR;AACF,KAFkB,CAAnB;AAGA,UAAKG,KAAL,GAAa;AACXC,wBAAmB,CADR;AAEXR;AAFW,KAAb;AALgB;AASjB;;AAkBD;;;;;;;;;;;;;;;;;;;6BA+BQ;AAAA,mBAC8B,KAAKD,KADnC;AAAA,UACEE,QADF,UACEA,QADF;AAAA,UACYQ,KADZ,UACYA,KADZ;AAAA,UACmBC,MADnB,UACmBA,MADnB;;AAEN,aACE;AAAA;AAAA,UAAK,OAAO,EAACD,YAAD,EAAQC,cAAR,EAAZ;AACE;AAAA;AAAA,YAAI,WAAU,eAAd,EAA8B,OAAOpB,OAAOC,OAA5C;AACI,eAAKoB,WAAL,CAAiBV,QAAjB;AADJ,SADF;AAIE;AAAA;AAAA,YAAK,OAAQ,EAACQ,OAAO,MAAR,EAAgBC,QAAS,MAAzB,EAAb;AACI,eAAKE,kBAAL;AADJ;AAJF,OADF;AAUD;;;;EAxEmBvB,S;;;OAapBwB,gB,GAAmB,UAACT,KAAD,EAAQU,KAAR,EAAkB;AACnC,WAAKC,QAAL,CAAc,EAACP,kBAAmBJ,KAApB,EAAd;AACA,QAAI,OAAOU,MAAMf,KAAN,CAAYiB,OAAnB,KAA+B,UAAnC,EAA8C;AAC5CF,YAAMf,KAAN,CAAYiB,OAAZ;AACD;AACF,G;;OAEDL,W,GAAc,UAACV,QAAD,EAAc;AAAA,QAChBO,gBADgB,GACI,OAAKD,KADT,CAChBC,gBADgB;;AAEvB,WAAOP,SAASC,GAAT,CAAa,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACjC,UAAMa,aAAcb,UAAUI,gBAAX,GAA+B,IAA/B,GAAsC,KAAzD;AACA,aAAO,gBAAMH,YAAN,CAAmBF,GAAnB,EAAwB,EAAEG,KAAMF,KAAR,EAAeY,SAAU,OAAKH,gBAAL,CAAsBK,IAAtB,SAAiCd,KAAjC,EAAwCD,GAAxC,CAAzB,EAAuEc,sBAAvE,EAAxB,CAAP;AACA;AACF,KAJM,CAAP;AAKJ,G;;OAmBDL,kB,GAAqB,YAAM;AAAA,iBACgB,OAAKL,KADrB;AAAA,QAChBC,gBADgB,UAChBA,gBADgB;AAAA,QACER,UADF,UACEA,UADF;;AAEvB,WAAOA,WAAWE,GAAX,CAAe,UAACiB,IAAD,EAAOf,KAAP,EAAiB;AACpC,UAAMgB,WAAYhB,UAAUI,gBAAX,GACJ,EAACa,SAAS,OAAV,EAAmBZ,OAAO,MAA1B,EAAkCC,QAAS,MAA3C,EADI,GAEJ,EAACW,SAAU,MAAX,EAFb;AAGC,aACG;AAAA;AAAA,UAAK,OAAOD,QAAZ,EAAsB,KAAK,MAAIhB,KAA/B;AACIe;AADJ,OADH;AAKH,KATM,CAAP;AAUH,G;;OAgBDG,mB,GAAsB,YAAM;AAC1B,WAAO,OAAKf,KAAL,CAAWC,gBAAlB;AACD,G;;kBAGYV,O","file":"TabPane.js","sourcesContent":["//import React, { Component } from 'react';\r\nimport React from '../_react'\r\n\r\nconst { Component } = React\r\n\r\nconst styles = {\r\n  ulStyle : {\r\n    listStyle: 'outside none none',\r\n    marginTop: '5px',\r\n    marginLeft: '10px',\r\n    marginRight: '5px',\r\n    marginBottom: '5px',\r\n    textAlign: 'center'\r\n    //borderBottom : '2px solid rgba(164, 135, 212, 1)'\r\n  }\r\n};\r\n\r\n\r\nclass TabPane extends Component {\r\n\r\n  constructor(props){\r\n    super();\r\n    const components = props.children.map((tab, index) => {\r\n       return  React.cloneElement(tab.props.children, { key : 'comp' + index });\r\n    })\r\n    this.state = {\r\n      selectedTabIndex : 0,\r\n      components\r\n    }\r\n  }\r\n\r\n  _handlerClickTab = (index, tabEl) => {\r\n    this.setState({selectedTabIndex : index});\r\n    if (typeof tabEl.props.onClick === 'function'){\r\n      tabEl.props.onClick();\r\n    }\r\n  }\r\n\r\n  _renderTabs = (children) => {\r\n       const {selectedTabIndex} = this.state;\r\n       return children.map((tab, index) => {\r\n          const isSelected = (index === selectedTabIndex) ? true : false;\r\n          return React.cloneElement(tab, { key : index, onClick : this._handlerClickTab.bind(this, index, tab), isSelected })\r\n          //return React.cloneElement(tab, { key : index, onClick : () => { console.log(index); }, isSelected })\r\n       })\r\n  }\r\n\r\n  /*\r\n  _renderComponents = (children) => {\r\n      const {selectedTabIndex} = this.state;\r\n      return children.map((tab, index) => {\r\n         const divStyle = (index === selectedTabIndex)\r\n                    ? {display: 'block', width: \"100%\", height : \"100%\"}\r\n                    : {display : 'none'};\r\n         const comp = React.cloneElement(tab.props.children, { key : index, ref : 'comp' + index});\r\n         return (\r\n             <div style={divStyle}>\r\n                {comp}\r\n             </div>\r\n           )\r\n      })\r\n  }\r\n  */\r\n\r\n  _renderComponents2 = () => {\r\n      const {selectedTabIndex, components} = this.state;\r\n      return components.map((comp, index) => {\r\n         const divStyle = (index === selectedTabIndex)\r\n                    ? {display: 'block', width: \"100%\", height : \"100%\"}\r\n                    : {display : 'none'};\r\n          return (\r\n             <div style={divStyle} key={'a'+index}>\r\n                {comp}\r\n             </div>\r\n           )\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const { children, width, height } = this.props;\r\n    return (\r\n      <div style={{width, height}}>\r\n        <ul className=\"tabpane__tabs\" style={styles.ulStyle}>\r\n           {this._renderTabs(children)}\r\n        </ul>\r\n        <div style={ {width: \"100%\", height : \"100%\"}}>\r\n           {this._renderComponents2()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getSelectedTabIndex = () => {\r\n    return this.state.selectedTabIndex;\r\n  }\r\n}\r\n\r\nexport default TabPane\r\n"]}