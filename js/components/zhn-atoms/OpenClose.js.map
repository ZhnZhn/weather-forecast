{"version":3,"sources":["../../../src/components/zhn-atoms/OpenClose.jsx"],"names":["Component","React","CL","SHOW_POPUP","NOT_SELECTED","DF","OPEN_COLOR","C","YELLOW","CLOSE_COLOR","BLANK","S","ROOT_DIV","lineHeight","ROOT_SVG","display","width","height","marginLeft","CAPTION","color","SIREN","paddingLeft","verticalAlign","fontFamily","fontWeight","fontSize","cursor","CURSOR","INLINE_BLOCK","BLOCK","NONE","PATH_OPEN","PATH_CLOSE","OpenClose","props","_handleClick","setState","prev","isOpen","isClose","state","render","rootStyle","caption","openColor","closeColor","CompAfter","isClickableCompAfter","childStyle","children","_pathV","_fillV","_rootChildStyle","_rootChildCl","defaultProps"],"mappings":"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","sourcesContent":["//import React, { Component } from 'react';\r\nimport React from '../_react'\r\n\r\nimport C from '../styles/Color'\r\n\r\nconst { Component } = React;\r\n\r\nconst CL = {\r\n  SHOW_POPUP: 'show-popup',\r\n  NOT_SELECTED: 'not-selected'\r\n};\r\n\r\nconst DF = {\r\n  OPEN_COLOR: C.YELLOW,\r\n  CLOSE_COLOR: C.BLANK\r\n};\r\n\r\nconst S = {\r\n  ROOT_DIV: {\r\n    lineHeight: 2\r\n  },\r\n  ROOT_SVG: {\r\n    display: 'inline-block',\r\n    width: '16px',\r\n    height: '16px',\r\n    marginLeft: '8px'\r\n  },\r\n  CAPTION: {\r\n    color: C.SIREN,\r\n    paddingLeft: '4px',\r\n    verticalAlign: 'top',\r\n    //color: 'rgba(164, 135, 212, 1)',\r\n    fontFamily: 'Roboto, Arial Unicode MS, Arial, sans-serif',\r\n    fontWeight: 'bold',\r\n    fontSize: '16px',\r\n    cursor: 'pointer'\r\n  },\r\n  CURSOR: {\r\n    cursor: 'pointer'\r\n  },\r\n  INLINE_BLOCK: {\r\n    display: 'inline-block'\r\n  },\r\n  BLOCK: {\r\n    display: 'block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nconst PATH_OPEN = \"M 2,14 L 14,14 14,2 2,14\";\r\nconst PATH_CLOSE = \"M 2,2 L 14,8 2,14 2,2\";\r\n\r\nclass OpenClose extends Component {\r\n   static defaultProps = {\r\n     openColor: DF.OPEN_COLOR,\r\n     closeColor: DF.CLOSE_COLOR\r\n   }\r\n   constructor(props){\r\n     super();\r\n     const { isClose } = props;\r\n     this.state = {\r\n       isOpen: isClose ? false : true\r\n     }\r\n   }\r\n\r\n  _handleClick = () => {\r\n    this.setState(prev => ({ isOpen: !prev.isOpen }));\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            rootStyle, caption,\r\n            openColor, closeColor,\r\n            CompAfter, isClickableCompAfter,\r\n            childStyle, children\r\n          } = this.props\r\n        , { isOpen } = this.state;\r\n    let _pathV, _fillV,\r\n       _rootChildStyle, _rootChildCl;\r\n    if (isOpen){\r\n      _pathV = PATH_OPEN\r\n      _fillV = openColor\r\n      _rootChildStyle = S.BLOCK\r\n      _rootChildCl = CL.SHOW_POPUP\r\n    } else {\r\n      _pathV = PATH_CLOSE\r\n      _fillV = closeColor\r\n      _rootChildStyle = S.NONE\r\n      _rootChildCl = null;\r\n    }\r\n\r\n    return (\r\n      <div style={{...S.ROOT_DIV, ...rootStyle}}>\r\n        <div className={CL.NOT_SELECTED}>\r\n          <div\r\n            style={{ ...S.INLINE_BLOCK, ...S.CURSOR }}\r\n            onClick={this._handleClick}\r\n          >\r\n            <div style={S.ROOT_SVG}>\r\n               <svg\r\n                  viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"\r\n                  preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                  style={S.INLINE_BLOCK}\r\n                >\r\n                 <path\r\n                    d={_pathV}\r\n                    fill={_fillV}\r\n                    strokeWidth=\"1\"\r\n                    stroke={openColor}\r\n                 />\r\n               </svg>\r\n           </div>\r\n           <span style={S.CAPTION} >\r\n              {caption}\r\n           </span>\r\n           {CompAfter && isClickableCompAfter && CompAfter}\r\n         </div>\r\n         {!isClickableCompAfter && CompAfter}\r\n      </div>\r\n      <div\r\n        className={_rootChildCl}\r\n        style={{ ...childStyle, ..._rootChildStyle}}\r\n      >\r\n        {children}\r\n      </div>\r\n     </div>\r\n    );\r\n   }\r\n}\r\n\r\nexport default OpenClose\r\n"],"file":"OpenClose.js"}