{"version":3,"sources":["../../../src/components/zhn-moleculs/ModalDialog.jsx"],"names":["Component","React","CL","SHOWING","HIDING","STYLE","SHOW","display","HIDE","HIDE_POPUP","opacity","transform","ROOT_DIV","position","top","left","backgroundColor","border","borderRadius","boxShadow","zIndex","CAPTON_DIV","padding","color","textAlign","fontSize","COMMAND_DIV","cursor","marginTop","marginBottom","marginRight","ModalDialog","props","_renderCommandButton","commandButtons","commandStyle","withoutClose","onClose","wasClosing","shouldComponentUpdate","nextProps","nextState","isNotUpdate","componentDidUpdate","prevProps","prevState","setTimeout","setState","timeout","_handleClickDialog","event","stopPropagation","render","isShow","isWithButton","style","caption","styleCaption","children","childrenStyle","_className","_style","defaultProps"],"mappings":"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","sourcesContent":["import React from '../_react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport SvgClose from '../zhn-atoms/SvgClose'\r\nimport RaisedButton from '../zhn-atoms/RaisedButton'\r\n\r\nconst { Component } = React;\r\n\r\nconst CL = {\r\n  SHOWING : 'show-popup',\r\n  HIDING : 'hide-popup'\r\n};\r\n\r\nconst STYLE = {\r\n  SHOW : {\r\n    display : 'block'\r\n  },\r\n  HIDE : {\r\n    display : 'none'\r\n  },\r\n  HIDE_POPUP : {\r\n    opacity: 0,\r\n    transform : 'scaleY(0)'\r\n  },\r\n  ROOT_DIV: {\r\n    position: 'absolute',\r\n    top: '15%',\r\n    left: '40%',\r\n    display: 'block',\r\n    backgroundColor: '#4D4D4D',\r\n    //border: 'solid 2px #232F3B',\r\n    border: 'solid 2px #3f5178',\r\n    borderRadius: '5px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 6px',\r\n    zIndex: 10\r\n  },\r\n  CAPTON_DIV:{\r\n    padding: '5px',\r\n    //color: 'rgba(164, 135, 212,1)',\r\n    color: '#9e9e9e',\r\n    //backgroundColor: '#232F3B',\r\n    backgroundColor: '#3f5178',\r\n    textAlign: 'center',\r\n    fontSize: '18px'\r\n  },\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n};\r\n\r\nclass ModalDialog extends Component {\r\n  /*\r\n   static propTypes = {\r\n     isShow: PropTypes.bool,\r\n     isWithButton: PropTypes.bool,\r\n     isNotUpdate: PropTypes.bool,\r\n     withoutClose: PropTypes.bool,\r\n     commandButtons: PropTypes.arrayOf(PropTypes.element),\r\n     timeout: PropTypes.number,\r\n     caption: PropTypes.string,\r\n     style: PropTypes.object,\r\n     childrenStyle: PropTypes.object,\r\n     onClose: PropTypes.func\r\n   }\r\n   */\r\n   static defaultProps = {\r\n     isWithButton: true,\r\n     isNotUpdate: false,\r\n     timeout: 450\r\n   }\r\n\r\n   constructor(props){\r\n     super()\r\n     this.wasClosing = false\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (nextProps !== this.props){\r\n       if (nextProps.isNotUpdate){\r\n         return false;\r\n       }\r\n     }\r\n     return true;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n     if (this.wasClosing){\r\n       setTimeout(\r\n         () => { this.setState({}) },\r\n         this.props.timeout\r\n       )\r\n     }\r\n   }\r\n\r\n  _handleClickDialog(event) {\r\n    event.stopPropagation()\r\n   }\r\n\r\n  _renderCommandButton = () => {\r\n    const {\r\n            commandButtons, commandStyle,\r\n            withoutClose, onClose\r\n          } = this.props;\r\n    return (\r\n      <div style={{ ...STYLE.COMMAND_DIV, ...commandStyle }}>\r\n        {commandButtons}\r\n        { !withoutClose &&\r\n            <RaisedButton\r\n              isPrimary={true}\r\n              caption=\"Close\"\r\n              onClick={onClose}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            isShow, isWithButton, style,\r\n            caption, styleCaption,\r\n            children, childrenStyle, onClose\r\n          } = this.props;\r\n\r\n    let _className, _style;\r\n\r\n    if (this.wasClosing){\r\n      _style = STYLE.HIDE\r\n      this.wasClosing = false\r\n    } else {\r\n      _className = isShow ? CL.SHOWING : CL.HIDING\r\n      _style = isShow ? STYLE.SHOW : STYLE.HIDE_POPUP\r\n      if (!isShow){\r\n        this.wasClosing = true\r\n      }\r\n    }\r\n\r\n    return (\r\n         <div\r\n             className={_className}\r\n             style={{ ...STYLE.ROOT_DIV, ...style, ..._style}}\r\n             onClick={this._handleClickDialog}\r\n         >\r\n             <div style={STYLE.CAPTON_DIV}>\r\n                <span style={styleCaption}>{caption}</span>\r\n                <SvgClose onClose={onClose} />\r\n             </div>\r\n             <div style={childrenStyle}>\r\n               {children}\r\n             </div>\r\n            {isWithButton && this._renderCommandButton()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalDialog\r\n"],"file":"ModalDialog.js"}