{"version":3,"sources":["../../../src/components/left-push-menu/HourlyChart.jsx"],"names":["Component","React","CartesianGrid","Chart","Line","YAxis","XAxis","ResponsiveContainer","Legend","LineChart","_data","day","temp","fnAdapter","obj","list","map","item","timestamp","dt","dt_txt","main","wind","rain","pressure","humidity","speed","_rain","toDayHour","dt_text","HourlyChart","state","data","filtered","_onStore","props","store","getState","recent","sHourly","byId","setState","handleFilter","dataKey","prev","componentDidMount","unsubsribe","subscribe","componentWillUnmount","shouldComponentUpdate","nextProps","render","STYLE","YAxisPressure","YAxisRain","YAxisSpeed","LineTempNight","LinePressure","LineRain","LineSpeed"],"mappings":"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","sourcesContent":["//import React, { Component } from 'react';\r\nimport React from '../_react'\r\n\r\nimport Chart from '../charts/Chart'\r\n\r\nimport dt from '../../utils/dt';\r\nimport { sHourly } from '../../flux/selectors';\r\n\r\nimport LegendHourly from './LegendHourly';\r\nimport STYLE from './Chart.Style';\r\n\r\nconst { Component } = React\r\n\r\nconst {\r\n CartesianGrid,\r\n Line,\r\n YAxis,\r\n XAxis,\r\n ResponsiveContainer,\r\n Legend,\r\n LineChart\r\n} = Chart;\r\n\r\n\r\nconst _data = [\r\n      {day: 'Page A', temp: 40 },\r\n      {day: 'Page B', temp: 30 },\r\n      {day: 'Page C', temp: 20 },\r\n      {day: 'Page D', temp: 27 },\r\n      {day: 'Page E', temp: 18 },\r\n      {day: 'Page F', temp: 23 },\r\n      {day: 'Page G', temp: 34 }\r\n];\r\n\r\nconst fnAdapter = ( obj ) => {\r\n  return obj.list.map(item => {\r\n    const {\r\n       dt:timestamp, dt_txt='',\r\n       main={}, wind={}, rain={}\r\n     } = item\r\n    , { temp, pressure, humidity } = main\r\n    , { speed=null } = wind\r\n    , _rain  = rain['3h'] || null\r\n    return {\r\n      //day : dt.toShortDayOfWeek(timestamp),\r\n      day : dt.toDayHour(timestamp),\r\n      dt_text : dt_txt,\r\n      temp : temp,\r\n      pressure : pressure,\r\n      humidity : humidity,\r\n      speed : speed,\r\n      rain : _rain\r\n    }\r\n  })\r\n}\r\n\r\nclass HourlyChart extends Component {\r\n  state = {\r\n    data : _data,\r\n    filtered : {\r\n      temp : false,\r\n      pressure : true,\r\n      rain : true,\r\n      speed : true\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubsribe = this.props.store.subscribe(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubsribe()\r\n  }\r\n  _onStore = () => {\r\n    const state = this.props.store.getState();\r\n    const recent = sHourly.recent(state)\r\n    if (recent !== this.recent){\r\n      this.recent = recent\r\n      const data = fnAdapter(sHourly.byId(state, recent))\r\n      this.setState({ data })\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps){\r\n    if (this.props !== nextProps) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleFilter = (dataKey) => {\r\n    this.setState((prev) => {\r\n       const { filtered } = prev\r\n       filtered[dataKey] = !filtered[dataKey]\r\n       return { filtered }\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { data, filtered } = this.state\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height={300} >\r\n\r\n      <LineChart data={data} {...STYLE.HourlyChart} >\r\n        <XAxis dataKey=\"day\" {...STYLE.XAxis} />\r\n\r\n        <YAxis\r\n           yAxisId={1}\r\n           orientation=\"right\"\r\n           width={45}\r\n           label=\"Â°C\"\r\n           dataKey=\"temp\"\r\n           hide={filtered.temp}\r\n        />\r\n        <YAxis\r\n           yAxisId={2}\r\n           orientation=\"right\"\r\n           width={80}\r\n           dataKey=\"pressure\"\r\n           type=\"number\"\r\n           domain={['dataMin', 'dataMax']}\r\n           label=\"hPa\"\r\n           hide={filtered.pressure}\r\n           {...STYLE.YAxisPressure}\r\n        />\r\n        <YAxis\r\n           yAxisId={3}\r\n           orientation=\"right\"\r\n           width={54}\r\n           label=\"mm\"\r\n           dataKey=\"rain\"\r\n           hide={filtered.rain}\r\n           {...STYLE.YAxisRain}\r\n        />\r\n        <YAxis\r\n          yAxisId={4}\r\n          orientation=\"right\"\r\n          width={45}\r\n          label=\"m/s\"\r\n          dataKey=\"speed\"\r\n          hide={filtered.speed}\r\n          {...STYLE.YAxisSpeed}\r\n        />\r\n\r\n        <CartesianGrid {...STYLE.CartesianGrid} />\r\n        <Legend\r\n           content={\r\n               <LegendHourly\r\n                   filtered={filtered}\r\n                   onFilter={this.handleFilter}\r\n               />\r\n            }\r\n        />\r\n\r\n        <Line {...STYLE.LineTempNight}\r\n            connectNulls={true}\r\n            yAxisId={1}\r\n            dataKey={(filtered.temp) ? \"empty\" : \"temp\"}\r\n        />\r\n        <Line {...STYLE.LinePressure}\r\n            connectNulls={true}\r\n            strokeDasharray=\"5 5\"\r\n            yAxisId={2}\r\n            dataKey={(filtered.pressure) ? \"empty\" : \"pressure\"}\r\n        />\r\n        <Line {...STYLE.LineRain}\r\n            connectNulls={true}\r\n            strokeDasharray=\"5 5\"\r\n            //strokeDasharray=\"100 5\"\r\n            yAxisId={3}\r\n            dataKey={(filtered.rain) ? \"empty\" : \"rain\"}\r\n        />\r\n        <Line\r\n            connectNulls={true}\r\n            {...STYLE.LineSpeed}\r\n            strokeDasharray=\"5 5\"\r\n            //strokeDasharray={false}\r\n            yAxisId={4}\r\n            dataKey={(filtered.speed) ? \"empty\" : \"speed\"}\r\n        />\r\n\r\n      </LineChart>\r\n\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HourlyChart\r\n"],"file":"HourlyChart.js"}