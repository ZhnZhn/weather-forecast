{"version":3,"sources":["../../../src/components/popups/Forecast.jsx"],"names":["Component","React","S","CAPTION","marginRight","NOT_FOUND_MSG","OK_CODE","INIT_STATE","forecast","cod","list","Forecast","state","_onStore","store","props","getState","recent","sForecast","setState","byId","_renderMsg","componentDidMount","unsubscribe","subscribe","componentWillUnmount","render","rootStyle","theme","_style","createStyle","styleConfig","ROOT_DIV"],"mappings":";;;;;;;;;;;AACA;;AAGA;;AAEA;;AACA;;AAEA;;AACA;;AAVA;AAEA;IAUQA,S,GAAcC,iB,CAAdD,S;AAER,IAAME,CAAC,GAAI;AACTC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE;AADN;AADA,CAAX;AAMA,IAAMC,aAAa,GAAG,8BAAtB;AACA,IAAMC,OAAO,GAAG,KAAhB;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAG;AACTC,IAAAA,GAAG,EAAG,GADG;AAETC,IAAAA,IAAI,EAAG;AAFE;AADM,CAAnB;;IAOMC,Q;;;;;;;;;;;;;UAOJC,K,GAAQL,U;;UAORM,Q,GAAW,YAAM;AACT,UAAEC,KAAF,GAAY,MAAKC,KAAjB,CAAED,KAAF;AAAA,UACJF,KADI,GACIE,KAAK,CAACE,QAAN,EADJ;AAAA,UAEJC,MAFI,GAEKC,qBAAUD,MAAV,CAAiBL,KAAjB,CAFL;;AAGN,UAAIK,MAAM,IAAI,MAAKA,MAAL,KAAgBA,MAA9B,EAAsC;AACpC,cAAKE,QAAL,CAAc;AACZX,UAAAA,QAAQ,EAAGU,qBAAUE,IAAV,CAAeR,KAAf,EAAsBK,MAAtB;AADC,SAAd;AAGD;AACF,K;;UAMDI,U,GAAa,YAAM;AACjB,aACE,6CACE,8CAAOhB,aAAP,CADF,CADF;AAKD,K;;;;;;;SA1BDiB,iB,GAAA,6BAAmB;AAAA,QACRR,KADQ,GACE,KAAKC,KADP,CACRD,KADQ;AAEhB,SAAKS,WAAL,GAAmBT,KAAK,CAACU,SAAN,CAAgB,KAAKX,QAArB,CAAnB;AACF,G;;SAaDY,oB,GAAA,gCAAsB;AACpB,SAAKF,WAAL;AACD,G;;SAUDG,M,GAAA,kBAAQ;AAAA,sBAC8B,KAAKX,KADnC;AAAA,QACEY,SADF,eACEA,SADF;AAAA,QACab,KADb,eACaA,KADb;AAAA,QACoBc,KADpB,eACoBA,KADpB;AAAA,QAEEpB,QAFF,GAEe,KAAKI,KAFpB,CAEEJ,QAFF;AAAA,QAGEC,GAHF,GAGUD,QAHV,CAGEC,GAHF;AAAA,QAIAoB,MAJA,GAISD,KAAK,CAACE,WAAN,CAAkBC,oBAAlB,CAJT;;AAMN,WACE,gCAAC,oBAAD;AACI,MAAA,SAAS,gCAAOJ,SAAP,MAAqBE,MAAM,CAACG,QAA5B,CADb;AAEI,MAAA,KAAK,EAAElB,KAFX;AAGI,MAAA,QAAQ,EAAC,iBAHb;AAII,MAAA,MAAM,EAAE;AAJZ,OAME,gCAAC,0BAAD;AACI,MAAA,QAAQ,EAAEN,QADd;AAEI,MAAA,YAAY,EAAEN,CAAC,CAACC;AAFpB,MANF,EAUK,KAAGM,GAAJ,KAAaH,OAAb,IAAwB,KAAKe,UAAL,EAV5B,CADF;AAcD,G;;;EAzDoBrB,S;;eA4DR,2BAAUW,QAAV,C","sourcesContent":["//import React, { Component } from 'react';\r\nimport React from '../_react'\r\n//import PropTypes from 'prop-types';\r\n\r\nimport { sForecast } from '../../flux/selectors';\r\n\r\nimport FlyPopup from '../containers/FlyPopup';\r\nimport PeriodForecast from '../views/PeriodForecast';\r\n\r\nimport styleConfig from './Forecast.Style';\r\nimport withTheme from '../hoc/withTheme';\r\n\r\nconst { Component } = React\r\n\r\nconst S  = {\r\n  CAPTION: {\r\n    marginRight: '40px'\r\n  }\r\n};\r\n\r\nconst NOT_FOUND_MSG = 'Forecast for place not found';\r\nconst OK_CODE = '200'\r\n\r\nconst INIT_STATE = {\r\n  forecast : {\r\n    cod : 200,\r\n    list : []\r\n  }\r\n}\r\n\r\nclass Forecast extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.object\r\n  }\r\n  */\r\n\r\n  state = INIT_STATE\r\n\r\n  componentDidMount(){\r\n     const { store } = this.props\r\n     this.unsubscribe = store.subscribe(this._onStore)\r\n  }\r\n\r\n  _onStore = () => {\r\n    const { store } = this.props\r\n    , state = store.getState()\r\n    , recent = sForecast.recent(state)\r\n    if (recent && this.recent !== recent ){\r\n      this.setState({\r\n        forecast : sForecast.byId(state, recent)\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  _renderMsg = () => {\r\n    return (\r\n      <div>\r\n        <span>{NOT_FOUND_MSG}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    const { rootStyle, store, theme } = this.props\r\n        , { forecast } = this.state\r\n        , { cod } = forecast\r\n        , _style = theme.createStyle(styleConfig);\r\n\r\n    return (\r\n      <FlyPopup\r\n          rootStyle={{ ...rootStyle, ..._style.ROOT_DIV }}\r\n          store={store}\r\n          storeKey=\"isPopupForecast\"\r\n          isShow={true}\r\n       >\r\n        <PeriodForecast\r\n            forecast={forecast}\r\n            captionStyle={S.CAPTION}\r\n        />\r\n        { (''+cod) !== OK_CODE && this._renderMsg() }\r\n      </FlyPopup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Forecast)\r\n"],"file":"Forecast.js"}