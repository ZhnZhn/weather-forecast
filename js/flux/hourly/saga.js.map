{"version":3,"sources":["../../../src/flux/hourly/saga.js"],"names":["takeEvery","effects","select","call","put","requestHourly","action","state","recent","sForecast","recentHourly","sHourly","request","Api","crHourlyById","json","hourly","requestedOk","requestedInCache","modal","showModal","errMsg","message","watchHourlyRequested","A","HOURLY_REQUESTED"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;IAGEA,S,GAEEC,kB,CAFFD,S;IACAE,M,GACED,kB,CADFC,M;IAAQC,I,GACNF,kB,CADME,I;IAAMC,G,GACZH,kB,CADYG,G;;AAGhB,IAAMC,aAAa;AAAA;AAAA,6BAAG,SAAhBA,aAAgB,CAAWC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJ,iBAAMJ,MAAM,EAAZ;;AAFI;AAEZK,UAAAA,KAFY;AAGZC,UAAAA,MAHY,GAGHC,qBAAUD,MAAV,CAAiBD,KAAjB,CAHG;AAIZG,UAAAA,YAJY,GAIGC,mBAAQH,MAAR,CAAeD,KAAf,CAJH;;AAAA,gBAKdC,MAAM,IAAIE,YAAY,KAAKF,MALb;AAAA;AAAA;AAAA;;AAAA;AAMF,iBAAML,IAAI,CAACS,mBAAD,EAAUC,wBAAIC,YAAJ,CAAiBN,MAAjB,CAAV,CAAV;;AANE;AAMTO,UAAAA,IANS;AAAA;AAOf,iBAAMX,GAAG,CAACY,oBAAOC,WAAP,CAAmBF,IAAnB,EAAyBP,MAAzB,CAAD,CAAT;;AAPe;AAAA;AAAA;;AAAA;AAAA;AAShB,iBAAMJ,GAAG,CAACY,oBAAOE,gBAAP,CAAwBV,MAAxB,CAAD,CAAT;;AATgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAYlB,iBAAMJ,GAAG,CAACe,qBAAMC,SAAN,CAAgB,OAAhB,EAAyB;AACjCC,YAAAA,MAAM,EAAE,YAAIC;AADqB,WAAzB,CAAD,CAAT;;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhBjB,aAAgB;AAAA,CAAH,CAAnB;;AAkBA,IAAMkB,oBAAoB;AAAA;AAAA,6BAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B,iBAAMvB,SAAS,CAACwB,gBAAEC,gBAAH,EAAqBpB,aAArB,CAAf;;AAD2B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvBkB,oBAAuB;AAAA,CAAH,CAA1B;;eAIeA,oB","sourcesContent":["import { effects } from 'redux-saga';\r\n\r\nimport hourly , { ACTION as A } from './actions';\r\nimport { sForecast, sHourly } from '../selectors'\r\n\r\nimport Api from '../../api/OpenWeather';\r\nimport request from '../../affects/request';\r\nimport modal from '../modal/actions'\r\n\r\nconst {\r\n  takeEvery,\r\n  select, call, put\r\n} = effects;\r\n\r\nconst requestHourly = function* (action){\r\n  try{\r\n    const state = yield select();\r\n    const recent = sForecast.recent(state);\r\n    const recentHourly = sHourly.recent(state);\r\n    if (recent && recentHourly !== recent){\r\n       const json = yield call(request, Api.crHourlyById(recent))\r\n       yield put(hourly.requestedOk(json, recent))\r\n    } else {\r\n      yield put(hourly.requestedInCache(recent))\r\n    }\r\n  } catch(err) {\r\n    yield put(modal.showModal('ERROR', {\r\n      errMsg: err.message\r\n    }))    \r\n  }\r\n}\r\n\r\nconst watchHourlyRequested = function* (){\r\n  yield takeEvery(A.HOURLY_REQUESTED, requestHourly)\r\n}\r\n\r\nexport default watchHourlyRequested\r\n"],"file":"saga.js"}